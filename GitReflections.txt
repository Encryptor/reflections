--) git command line commands

git log --stat // shows git log and gives statistics about which files have changed in each commit
	       // green '+' indicated addition and red '-' indicates deletion. The number of +'s and -'s
	       // are proportional to the changes

git diff id#1 id#2 // to diff between 2 ids

git --version // to check git version installed

git clone URL // to clone a repository

git config --global color.ui auto // to show diffs in color

--) Repositories are part of Git and commits are part of repository

--) Clone takes an existing repository and creates a new one just like it

--) Log shows the commits in the repository prior to the current commit

--) a commit is a snapshot of a Git repository

--) git checkout means resetting all files to how they were at the time the commit was made

--) HEAD is git's terminology for the current commit

--) git status // shows which files have chaning since the last commit

--) git has a staging area to which I can add files one at a time. then when ready to 		commit, Git adds the entire contents of the staging area and makes one commit

--) git add filename // to add files to the staging area, ready to be committed

--) git commit -m "Commit message" // make a commit and add a message to it

--) git diff // compares working directory to the staging area

--) git diff --staged // compares staging area to commit1 (which is the most recent commit)

--) git checkout master // checks out master branch

--) master is the name given to the main branch. and every time I create a repository, Git 	creates a master branch for me.

--) I can label(name) each branch (other than the master). Preferrable the name is 		descriptive


--) detached head error message means I'm looking at a commit that is not labeled with a 		branch name (So in this state I'm either on a master branch on in a detached head 		branch)

--) tip of a branch refers to the most recent commit 

--) It is possible to check out a branch, similar to a commit

--) merging is the process of combining 2 commits

--) git branch // shows current branches

--) git checkout branch_name // to checkout a branch. makes this branch the current checked 	out branch








